(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    210190,       4695]
NotebookOptionsPosition[    202227,       4416]
NotebookOutlinePosition[    202553,       4431]
CellTagsIndexPosition[    202510,       4428]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"point", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "I"}], ")"}], "/", "2"}]}]], "Input",
 CellChangeTimes->{{3.682344092099421*^9, 3.6823441048731613`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  FractionBox["\[ImaginaryI]", "2"]}]], "Output",
 CellChangeTimes->{3.6823441053104477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["1"], "Input",
 CellChangeTimes->{{3.68234411079182*^9, 3.682344116185384*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6823441167053413`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["point"], "Input",
 CellChangeTimes->{{3.6823441172284203`*^9, 3.682344118274781*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  FractionBox["\[ImaginaryI]", "2"]}]], "Output",
 CellChangeTimes->{3.68234411876991*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["point", "2"]], "Input",
 CellChangeTimes->{{3.682344119532271*^9, 3.682344121466807*^9}}],

Cell[BoxData[
 FractionBox["\[ImaginaryI]", "2"]], "Output",
 CellChangeTimes->{3.682344122397677*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["point", "3"]], "Input",
 CellChangeTimes->{{3.682344123694015*^9, 3.682344126089889*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "4"]}], "+", 
  FractionBox["\[ImaginaryI]", "4"]}]], "Output",
 CellChangeTimes->{3.6823441273336897`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["point", "4"]], "Input",
 CellChangeTimes->{{3.682344128263013*^9, 3.68234413057759*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", "4"]}]], "Output",
 CellChangeTimes->{3.682344132027895*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["point", "5"]], "Input",
 CellChangeTimes->{{3.6823441334865913`*^9, 3.682344137159581*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "8"]}], "-", 
  FractionBox["\[ImaginaryI]", "8"]}]], "Output",
 CellChangeTimes->{3.68234413760642*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["point", "6"]], "Input",
 CellChangeTimes->{{3.682344143795356*^9, 3.682344146200897*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["\[ImaginaryI]", "8"]}]], "Output",
 CellChangeTimes->{3.68234414681108*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["point", "7"]], "Input",
 CellChangeTimes->{{3.682344149133792*^9, 3.68234415721119*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "16"], "-", 
  FractionBox["\[ImaginaryI]", "16"]}]], "Output",
 CellChangeTimes->{{3.6823441512391777`*^9, 3.682344157610993*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "n_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"n", ",", 
    SuperscriptBox["n", "2"], ",", 
    SuperscriptBox["n", "3"], ",", 
    SuperscriptBox["n", "4"], ",", 
    SuperscriptBox["n", "5"], ",", 
    SuperscriptBox["n", "6"]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6823456891630096`*^9, 3.6823457984829903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "[", 
  RowBox[{"1", "+", "I"}], "]"}]], "Input",
 CellChangeTimes->{{3.6823457713111687`*^9, 3.682345782636091*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "\[ImaginaryI]"}], ",", 
   RowBox[{"2", " ", "\[ImaginaryI]"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "4"}], ",", 
   RowBox[{
    RowBox[{"-", "4"}], "-", 
    RowBox[{"4", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "8"}], " ", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6823457829529667`*^9, 3.6823458135320807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "[", 
  RowBox[{"1", "-", "I"}], "]"}]], "Input",
 CellChangeTimes->{{3.6823458162812634`*^9, 3.682345820541939*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "-", "\[ImaginaryI]"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "4"}], ",", 
   RowBox[{
    RowBox[{"-", "4"}], "+", 
    RowBox[{"4", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"8", " ", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.682345820956155*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", 
   RowBox[{"n_", ",", "A_", ",", "B_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"A", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "I"}], ")"}], "n"]}], "+", 
   RowBox[{"B", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "I"}], ")"}], "n"]}]}]}]], "Input",
 CellChangeTimes->{{3.6823460317877827`*^9, 3.68234607032196*^9}, {
  3.682346801115366*^9, 3.682346801897928*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S", "[", 
  RowBox[{"1", ",", "1", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6823460749765587`*^9, 3.682346131660038*^9}}],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"3", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.68234610596039*^9, 3.682346132025791*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", "+", "I"}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "-", "I"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.682346634542923*^9, 3.682346643621051*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  FractionBox[
   RowBox[{"3", " ", "\[ImaginaryI]"}], "2"]}]], "Output",
 CellChangeTimes->{3.6823466439163227`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"S", "[", 
  RowBox[{"3", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]"}], "2"]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.682346712709529*^9, 3.6823468102331133`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], "-", 
  RowBox[{"4", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.68234674907727*^9, 3.682346811005721*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"A", ",", "B"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"A", 
      RowBox[{"(", 
       RowBox[{"1", "+", "I"}], ")"}]}], "+", 
     RowBox[{"B", 
      RowBox[{"(", 
       RowBox[{"1", "-", "I"}], ")"}]}]}], "\[Equal]", "1"}], "&&", 
   RowBox[{
    RowBox[{
     RowBox[{"A", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "I"}], ")"}], "2"]}], "+", 
     RowBox[{"B", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "I"}], ")"}], "2"]}]}], "\[Equal]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6823468478236322`*^9, 3.682346919806712*^9}, {
   3.6823469941826773`*^9, 3.682346994306261*^9}, 3.682347125232403*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"A", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "-", "\[ImaginaryI]"}]}], ",", 
    RowBox[{"B", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "+", "\[ImaginaryI]"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.682346863009872*^9, 3.682346867037915*^9}, {
   3.682346914116946*^9, 3.682346920142335*^9}, 3.682346994652782*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S", "[", 
  RowBox[{"3", ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], "-", "\[ImaginaryI]"}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], "+", "\[ImaginaryI]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682346933121323*^9, 3.682347003959713*^9}, {
  3.682347111687903*^9, 3.682347119306765*^9}}],

Cell[BoxData[
 RowBox[{"2", "-", 
  RowBox[{"2", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.682346944598214*^9, 3.682347004608246*^9}, {
  3.682347112770381*^9, 3.682347119656756*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "-", "I"}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", "I"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.682349908192554*^9, 3.682349920046369*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.682349920586307*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "I"}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "-", "I"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6823499303697023`*^9, 3.682349937733779*^9}}],

Cell[BoxData["\[ImaginaryI]"], "Output",
 CellChangeTimes->{3.682349939452311*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "I"}], ")"}], "6"], "/", 
  RowBox[{"(", 
   RowBox[{"1", "-", "I"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.682350050121231*^9, 3.682350059551036*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], "+", 
  RowBox[{"4", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.682350059964324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "-", "I"}], ")"}], "5"]], "Input",
 CellChangeTimes->{{3.6823500675215807`*^9, 3.6823500710889063`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], "+", 
  RowBox[{"4", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.682350071880701*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "I"}], ")"}], "20"], "/", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "I"}], ")"}], "20"]}]], "Input",
 CellChangeTimes->{{3.6823502197214622`*^9, 3.682350226214273*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6823502284013968`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["I", "20"]], "Input",
 CellChangeTimes->{{3.6823502301278467`*^9, 3.682350231939048*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.682350232369012*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "I"}], ")"}], "2"], "-", 
  RowBox[{"2", 
   RowBox[{"(", 
    RowBox[{"1", "+", "I"}], ")"}]}], "+", "2"}]], "Input",
 CellChangeTimes->{{3.6823505023392363`*^9, 3.6823505158297663`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.682350516278626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "I"}], ")"}], "2"], "-", 
  RowBox[{"2", 
   RowBox[{"(", 
    RowBox[{"1", "-", "I"}], ")"}]}], "+", "2"}]], "Input",
 CellChangeTimes->{{3.6823505351492577`*^9, 3.6823505496368103`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6823505508610773`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "-", "I"}], ")"}], "2"]], "Input",
 CellChangeTimes->{{3.682350670839323*^9, 3.682350675853837*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.682350676297749*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"1", "+", "I"}], ")"}]], "Input",
 CellChangeTimes->{{3.682361357594389*^9, 3.682361360365334*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.682361364833658*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
  "\"convert to exponential\"",RowBox[{"1", "+", "\[ImaginaryI]"}],
   RowBox[{"With", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"n", "=", 
             RowBox[{"Abs", "[", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], "]"}]}], ",", 
           RowBox[{"a", "=", 
             RowBox[{"Arg", "[", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"Defer", "[", 
         RowBox[{"n", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "a"}]]}], "]"}]}], "]"}]},
  "HiddenFunction",
  DisplayFunction->(FrameBox[
    DynamicModuleBox[{Typeset`open$$ = False}, 
     PaneSelectorBox[{False -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
       True -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}, {"\"\"", 
            StyleBox[#3, ShowStringCharacters -> True], "\[SpanFromLeft]"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, FrameStyle -> {
            Dashing[{0, Small}], 
            GrayLevel[0.85]}], "Grid"]}, 
      Dynamic[Typeset`open$$, TrackedSymbols :> {Typeset`open$$}], ImageSize -> 
      Automatic], DynamicModuleValues :> {}], FrameStyle -> GrayLevel[0.85], 
    RoundingRadius -> 4, StripOnInput -> False]& ),
  Editable->False,
  InterpretationFunction->(#3& )]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SqrtBox["2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}]], "Output",
 CellChangeTimes->{3.682361366406557*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SA", "[", "n_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"n", "/", "2"}]], 
    RowBox[{"Sqrt", "[", "5", "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "+", "4"}], ")"}], 
        RowBox[{"Pi", "/", "4"}]}], ")"}], "+", 
      RowBox[{"ArcTan", "[", "2", "]"}]}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6823622904304934`*^9, 3.682362397843368*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"SA", "[", 
   RowBox[{"{", 
    RowBox[{"33", ",", "34", ",", "35"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.682362401361796*^9, 3.682362431724574*^9}, {
  3.6823624751000547`*^9, 3.682362476840914*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"65535.999999999985`", ",", "262144.`", ",", "393216.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.682362404069228*^9, 3.6823624321075*^9}, 
   3.6823624774358673`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}], ")"}], "-", "I"}], ")"}]], "Input",
 CellChangeTimes->{{3.682362783203553*^9, 3.6823628021475897`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], "-", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{3.682362803337762*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"convert to exponential\"",RowBox[{
     RowBox[{"-", 
       FractionBox["1", "2"]}], "-", "\[ImaginaryI]"}],RowBox[{"With", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"n", "=", 
             RowBox[{"Abs", "[", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["1", "2"]}], "-", "\[ImaginaryI]"}], "]"}]}], 
           ",", 
           RowBox[{"a", "=", 
             RowBox[{"Arg", "[", 
               RowBox[{
                 RowBox[{"-", 
                   FractionBox["1", "2"]}], "-", "\[ImaginaryI]"}], "]"}]}]}],
          "}"}], ",", 
       RowBox[{"Defer", "[", 
         RowBox[{"n", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "a"}]]}], "]"}]}], "]"}]},
  "HiddenFunction",
  DisplayFunction->(FrameBox[
    DynamicModuleBox[{Typeset`open$$ = False}, 
     PaneSelectorBox[{False -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
       True -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}, {"\"\"", 
            StyleBox[#3, ShowStringCharacters -> True], "\[SpanFromLeft]"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, FrameStyle -> {
            Dashing[{0, Small}], 
            GrayLevel[0.85]}], "Grid"]}, 
      Dynamic[Typeset`open$$, TrackedSymbols :> {Typeset`open$$}], ImageSize -> 
      Automatic], DynamicModuleValues :> {}], FrameStyle -> GrayLevel[0.85], 
    RoundingRadius -> 4, StripOnInput -> False]& ),
  Editable->False,
  InterpretationFunction->(#3& )]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox["5"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "+", 
      RowBox[{"ArcTan", "[", "2", "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.6823628058672123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  RowBox[{
   RowBox[{"-", "I"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682362910694768*^9, 3.682362921405408*^9}}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", 
  RowBox[{"ArcTanh", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{3.682362921829904*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ")"}], "-", "I"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.682363321232819*^9, 3.682363322447629*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox["5"], "2"]], "Output",
 CellChangeTimes->{3.682363322573447*^9}]
}, Open  ]],

Cell["33", "Item",
 CellChangeTimes->{{3.682384902994616*^9, 3.6823849046478987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"1", "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["E", 
       RowBox[{"I", "*", "\[Theta]"}]], "+", "1"}], ")"}], "2"]}]}]], "Input",\

 CellChangeTimes->{{3.682366790467093*^9, 3.682366855598461*^9}, {
  3.682366911154216*^9, 3.6823669658674603`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"X", "[", "\[Theta]", "]"}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{"X", "[", "\[Theta]", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"1000", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682366807468705*^9, 3.682366892179308*^9}, {
  3.682366969594331*^9, 3.682366999977407*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
P+/w8KYgnjY96exnRQ==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-7.393425997305432, 0.25}, {-3.2510897563250563`, 
   3.2343071139878634`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.682366892427436*^9, 
  3.6823670003661957`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfXm0VcWZ78mdGAQVUJwTE5NOeki6O+mk87pfTyuddL+VlR5Wv6nfevee
CyggiiOKY7jngCgg4hxxNg4RTZToOfsyzyCTAqKAEwgGJ4ya0BrbIfX2V1Vf
1VdVv70PeX/06jewFtzLPvvsXfV9X33z8L1Rk8afNnHUpNPHjDr5b84bdc74
08ecf/J3zj4vv9T+qUrlU+Pzv189uUK/q0qF/9F/Tqd/7H++S/+0q7Fjx54Q
X63oy8r+qfxf9/n/m7v+Pw4q39K/d6lf//rX6pFHHlFTpkxRl156qbrnnnvU
Bx980HaIX9+0aZO65ppr1Icffqg++eQTdffdd6v58+e3+vp/tJ9v2LBBTZo0
if5W2vS/Hfpx9Gft2rVq+/bt5lGd6umnn1Zz5szhx9GjKyeJR37HPpJWcd99
99GmKvq7nXTrceLOb+vfO9SqVavUxIkT1cyZM9XHH398qFt+44031L59+/S1
jz76SN10001q3bp1h/r1bdu2qenTp2uI0d/Zs2erxYsXH+rXCV/z5s1TkydP
1pCbO3fuoeCrhBzyq4s2vqweX/2i2n/goLn9b0tuH6x6ak01elq//nnm1UvU
pOuXq+/ftkYt3bxXvfnOe+qdgx+o9371kf7aXxU/aSA9oDJAnT5jkRp31ULV
d/saXoW+L39MSC3gGe36GfRvQy+nWs/yJ5rnTpy9RF19/0b97Jn3bVC3zt+m
1j79M1qaee4f0z/yZHbx0+qZe1p7dI3+12HfMHraAnXF3U8Eq35291sEBPOG
Pyxe+WD33KZ7V0d0jffWrAxSF9ywQs24d4MGPP3+k+XPqZdf+4V+Jr3b7ep3
i9/ZBvYyEFwbpP8dorotVPnvOdcuU9fO26zOmbNUzf7RJjV/5fPq5kee0mth
hP9W8esdeGv+VcfYa1WxZbPMLnVmjsAbf7xF3fLoVrUkJ9GtL7ypPvzoE/3M
k1vRRCdBVPXmf7t5B/VmZUQA4czu07yO7u2dmqkJsxapHy9/XkOVX3dCq9cN
0K+TwDL/z/RrO90u/c6HMSnxffp6Y6BdTdXCu3b7WrVgw2614ql9au/rv9Sv
HllyPEPwOox7TDqK1oup+/sa5hO+tzLULjDcWNZmwdvT1wz2m39kCScHfb4E
+tpZOQbnLd3piXP4IRxlgZq24Fq4fLpmltYIt2QP01F2+d3BGht87sbnXOe2
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
0BhFCgK8lrqa5PMStb2OxR6SuMc4HHlMTMh18yt/+IR6/a33ai2AlVJOGjhM
AxPkQGC5RbyWDokNWJjUvFqQvs7H3Aut2PILXxvHV6p1PD/KS16pW4oJYuUe
dvRq5J3nWX90H/VRuH/hDj0KjmqzpxXDlz0sNOud8smoYSK1FP7Rop1qem41
jb1yQeRDaAgKlYyBqLmBRralfaqaPugY0lgyc0fgA7EvKSal6yyqu4da7ch4
qfUmmKHMDQvTenASXLXb16pX3/oXCnFc1UqFG6ThS035Hshh+6NFO9TNP9mq
G/FxQNEb5Uk2ls7yQEF4F5GKzZC6mFMXc1CTD8YuTX1N+uN9vmyTTwbs/frF
gC7MA7i9I0+gJ7549f0bdVPO3ft/wZT48MMPq3HjxukuAW22V8CsWbMYcgRF
nqyhKU3bBlNyaM+dv017mukaOa7P1iN+FwTBUhDIFIlvsGkXysMbzqANEyKZ
qFwSVML7QnEZxGNiEsqSGRjdtbADHGMGRUWG8KGJo8x1MyZg4YaXNTRJIDF9
bt26Vc2YMUN98sknlZLe//nVS3Xf1BXEGkAJs+2pjiRKmT9NLp/n75RN20y9
MQWtgYTyGhteBOavA2whlcOAfoAucXZ8rWaU9OvmbVYHcvP5ag2iDvXrX/9a
3XnnnWrOnDnqwIEDJd0uopccm2wOxzDiqA1MzxJTI6Jxz4XBhD7s3kGpHm6k
i/Cmx/gNJZ//Lnvm6exe/9CTunnvNQ9sUj94dIva8sKbOjB8rQZQp4bl+vXr
1cUXX6wWLFhA/6/oWSyy/5DMJRfdczVxeHd+rNqE4XpRD+5EJgiKI1iE2RMh
rQk5KBIKnYtN9eCi3DhiEHAEQdKHmqfFXUXjIzX5phVqzdP751oSff/999XV
V1+tlixZUimbeBM3ZWukdSw4N+xEcM3luHjft48XFJxgRJ3o9AsTywe401Tp
VDSILLz8uRS/vO2n2yiF5BYNgi719NNPq8cee8xJph07dqiZM2eWQa3dPa+I
yxxqWTiH/CRRhwnERlRx63PfUjJNyU9SiNlfLwE6PPi62cAI+5DeSMqw2KfJ
7ffn6syOPT+v3G6htnfvXjVp0iT19ttvqw8//FDNmzdP3X333SVQC/3SYd1A
Wkc2QFCQkXeSQXW6eyK5KE7ZiYz+8JDyfe3uDAu+wOHjpHYCuQ6PBngfzqDM
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{"-", "1"}], "]"}], "-", 
  RowBox[{"I", "*", 
   RowBox[{"Sin", "[", 
    RowBox[{"-", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.682368018458578*^9, 3.6823680402775993`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "1", "]"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Sin", "[", "1", "]"}]}]}]], "Output",
 CellChangeTimes->{3.682368040589314*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "1", "]"}], "+", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", "1", "]"}]}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"0.5403023058681398`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.8414709848078965`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.682368042698221*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "+", "I"}], ")"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6823685965497293`*^9, 3.6823686453353443`*^9}, {
  3.682368683139234*^9, 3.682368695293055*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  FractionBox["\[ImaginaryI]", "2"]}]], "Output",
 CellChangeTimes->{3.682368645603085*^9, 3.682368695582769*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"z", "^", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.682368807311351*^9, 3.6823688374312153`*^9}, {
   3.6823689001905937`*^9, 3.6823689006323347`*^9}, 3.682368966355506*^9, {
   3.682370859399756*^9, 3.682370860104841*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox["\[ImaginaryI]", "2"]}], ",", 
   FractionBox["\[ImaginaryI]", "2"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], "+", 
    FractionBox["\[ImaginaryI]", "4"]}], ",", 
   RowBox[{"-", 
    FractionBox["1", "4"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "8"]}], "-", 
    FractionBox["\[ImaginaryI]", "8"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[ImaginaryI]", "8"]}], ",", 
   RowBox[{
    FractionBox["1", "16"], "-", 
    FractionBox["\[ImaginaryI]", "16"]}], ",", 
   FractionBox["1", "16"], ",", 
   RowBox[{
    FractionBox["1", "32"], "+", 
    FractionBox["\[ImaginaryI]", "32"]}], ",", 
   FractionBox["\[ImaginaryI]", "32"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "64"]}], "+", 
    FractionBox["\[ImaginaryI]", "64"]}], ",", 
   RowBox[{"-", 
    FractionBox["1", "64"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "128"]}], "-", 
    FractionBox["\[ImaginaryI]", "128"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[ImaginaryI]", "128"]}], ",", 
   RowBox[{
    FractionBox["1", "256"], "-", 
    FractionBox["\[ImaginaryI]", "256"]}], ",", 
   FractionBox["1", "256"], ",", 
   RowBox[{
    FractionBox["1", "512"], "+", 
    FractionBox["\[ImaginaryI]", "512"]}], ",", 
   FractionBox["\[ImaginaryI]", "512"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "1024"]}], "+", 
    FractionBox["\[ImaginaryI]", "1024"]}], ",", 
   RowBox[{"-", 
    FractionBox["1", "1024"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.68236883767761*^9, 3.682368901048799*^9, {3.6823689666550694`*^9, 
   3.682368974758861*^9}, 3.6823708604104557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listb", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"{", "0", "}"}], ",", "lista"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.682368909498122*^9, 3.6823689716725893`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox["\[ImaginaryI]", "2"]}], ",", 
   FractionBox["\[ImaginaryI]", "2"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], "+", 
    FractionBox["\[ImaginaryI]", "4"]}], ",", 
   RowBox[{"-", 
    FractionBox["1", "4"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "8"]}], "-", 
    FractionBox["\[ImaginaryI]", "8"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[ImaginaryI]", "8"]}], ",", 
   RowBox[{
    FractionBox["1", "16"], "-", 
    FractionBox["\[ImaginaryI]", "16"]}], ",", 
   FractionBox["1", "16"], ",", 
   RowBox[{
    FractionBox["1", "32"], "+", 
    FractionBox["\[ImaginaryI]", "32"]}], ",", 
   FractionBox["\[ImaginaryI]", "32"]}], "}"}]], "Output",
 CellChangeTimes->{{3.682368915741338*^9, 3.682368976429392*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682369015366081*^9, 3.6823690258076277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"listd", "=", 
  RowBox[{"listb", "[", 
   RowBox[{"[", 
    RowBox[{"2", ";;", 
     RowBox[{"Length", "[", "listb", "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"listc", "=", 
  RowBox[{"listb", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", 
     RowBox[{
      RowBox[{"Length", "[", "listb", "]"}], "-", "1"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.682369041128961*^9, 3.682369099906662*^9}, {
  3.6823691744006844`*^9, 3.6823691809557447`*^9}, {3.682369269879918*^9, 
  3.682369271920432*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox["\[ImaginaryI]", "2"]}], ",", 
   FractionBox["\[ImaginaryI]", "2"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], "+", 
    FractionBox["\[ImaginaryI]", "4"]}], ",", 
   RowBox[{"-", 
    FractionBox["1", "4"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "8"]}], "-", 
    FractionBox["\[ImaginaryI]", "8"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[ImaginaryI]", "8"]}], ",", 
   RowBox[{
    FractionBox["1", "16"], "-", 
    FractionBox["\[ImaginaryI]", "16"]}], ",", 
   FractionBox["1", "16"], ",", 
   RowBox[{
    FractionBox["1", "32"], "+", 
    FractionBox["\[ImaginaryI]", "32"]}], ",", 
   FractionBox["\[ImaginaryI]", "32"]}], "}"}]], "Output",
 CellChangeTimes->{{3.682369046816351*^9, 3.682369100772078*^9}, 
   3.682369181407372*^9, 3.682369272387236*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox["\[ImaginaryI]", "2"]}], ",", 
   FractionBox["\[ImaginaryI]", "2"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], "+", 
    FractionBox["\[ImaginaryI]", "4"]}], ",", 
   RowBox[{"-", 
    FractionBox["1", "4"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "8"]}], "-", 
    FractionBox["\[ImaginaryI]", "8"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[ImaginaryI]", "8"]}], ",", 
   RowBox[{
    FractionBox["1", "16"], "-", 
    FractionBox["\[ImaginaryI]", "16"]}], ",", 
   FractionBox["1", "16"], ",", 
   RowBox[{
    FractionBox["1", "32"], "+", 
    FractionBox["\[ImaginaryI]", "32"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.682369046816351*^9, 3.682369100772078*^9}, 
   3.682369181407372*^9, 3.682369272393598*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"liste", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "listc", "}"}], ",", 
     RowBox[{"{", "listd", "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.682369205016361*^9, 3.682369282252236*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox["\[ImaginaryI]", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox["\[ImaginaryI]", "2"]}], ",", 
     FractionBox["\[ImaginaryI]", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[ImaginaryI]", "2"], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], "+", 
      FractionBox["\[ImaginaryI]", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], "+", 
      FractionBox["\[ImaginaryI]", "4"]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "8"]}], "-", 
      FractionBox["\[ImaginaryI]", "8"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "8"]}], "-", 
      FractionBox["\[ImaginaryI]", "8"]}], ",", 
     RowBox[{"-", 
      FractionBox["\[ImaginaryI]", "8"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[ImaginaryI]", "8"]}], ",", 
     RowBox[{
      FractionBox["1", "16"], "-", 
      FractionBox["\[ImaginaryI]", "16"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "16"], "-", 
      FractionBox["\[ImaginaryI]", "16"]}], ",", 
     FractionBox["1", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "16"], ",", 
     RowBox[{
      FractionBox["1", "32"], "+", 
      FractionBox["\[ImaginaryI]", "32"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "32"], "+", 
      FractionBox["\[ImaginaryI]", "32"]}], ",", 
     FractionBox["\[ImaginaryI]", "32"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.682369222611883*^9, 3.6823692825894127`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "liste", "]"}]], "Input",
 CellChangeTimes->{{3.68236929019694*^9, 3.6823692972225857`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.682369297434846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682369372027298*^9, 3.682369391684333*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 0.}, {5., -0.25}, {9., 
    0.0625}}, {}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.}, {-0.25, 0.0625}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.682369378741426*^9, 3.682369382848341*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Norm", ",", "lista"}], "]"}]], "Input",
 CellChangeTimes->{{3.682370534812146*^9, 3.682370568650619*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["1", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", "4"], ",", 
   FractionBox["1", 
    RowBox[{"4", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", "8"], ",", 
   FractionBox["1", 
    RowBox[{"8", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", "16"], ",", 
   FractionBox["1", 
    RowBox[{"16", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", "32"], ",", 
   FractionBox["1", 
    RowBox[{"32", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", "64"], ",", 
   FractionBox["1", 
    RowBox[{"64", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", "128"], ",", 
   FractionBox["1", 
    RowBox[{"128", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", "256"], ",", 
   FractionBox["1", 
    RowBox[{"256", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", "512"], ",", 
   FractionBox["1", 
    RowBox[{"512", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", "1024"]}], "}"}]], "Output",
 CellChangeTimes->{{3.682370537474757*^9, 3.682370569347971*^9}, 
   3.682370626685842*^9, 3.68237086374647*^9, 3.68237090360163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", "%"}]], "Input",
 CellChangeTimes->{{3.682370628532934*^9, 3.682370630316699*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7071067811865475`", ",", "0.5`", ",", "0.35355339059327373`", ",", 
   "0.25`", ",", "0.17677669529663687`", ",", "0.125`", ",", 
   "0.08838834764831843`", ",", "0.0625`", ",", "0.044194173824159216`", ",", 
   "0.03125`", ",", "0.022097086912079608`", ",", "0.015625`", ",", 
   "0.011048543456039804`", ",", "0.0078125`", ",", "0.005524271728019902`", 
   ",", "0.00390625`", ",", "0.002762135864009951`", ",", "0.001953125`", ",",
    "0.0013810679320049755`", ",", "0.0009765625`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.682370630635971*^9, 3.68237086547908*^9, {3.682370901418008*^9, 
   3.682370904890533*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", "%"}]], "Input",
 CellChangeTimes->{{3.6823708687906*^9, 3.682370899344357*^9}}],

Cell[BoxData["2.4118559319410897`"], "Output",
 CellChangeTimes->{{3.68237087132966*^9, 3.682370905723597*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "+", 
      RowBox[{"I", "*", "b"}]}], ")"}], "-", "1"}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "+", 
      RowBox[{"I", "*", "b"}]}], ")"}], "-", "2"}], ")"}]}]], "Input",
 CellChangeTimes->{
  3.682372361668619*^9, {3.682373318801235*^9, 3.6823734110534143`*^9}, {
   3.68237345367308*^9, 3.682373458726363*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "a", "+", "b"}], 
  RowBox[{
   RowBox[{"-", "2"}], "+", "a", "+", "b"}]]], "Output",
 CellChangeTimes->{3.682373337218051*^9, 3.6823734143469067`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", 
           RowBox[{"I", "*", "b"}]}], ")"}], "-", "1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", 
           RowBox[{"I", "*", "b"}]}], ")"}], "-", "2"}], ")"}]}], "]"}], ",", 
     
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", 
           RowBox[{"I", "*", "b"}]}], ")"}], "-", "1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", 
           RowBox[{"I", "*", "b"}]}], ")"}], "-", "2"}], ")"}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6823734679493113`*^9, 3.682373588204636*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
Hcb6lzT9K2H9S5r+FbL+pV28f9uz/qVA3r/JrH9J078vWP+Spn97sf4lAe9f
W9a/9Iv3ry3rX0rm/evP+pfceP+2Yv1L3rx/57H+pQjev/dY/5JGn0uZPpNG
n3WYPtN3rs/vmD6TRp9nMX0mba7POUyfSaPPA5k+0ySuz65MnymU6/Nwps/0
jetzIdNnKuL6fInpMx3k+ixk+kxruT5fYPpMI3h9S5k+02euzxeZPlMjrs/D
mD5Tf+6/Dsx/KYj7bwDzX9L4rwnzX+rJ/ZfzCJVz/53F/JdEvJ8XMv+lttx/
uzD/JY3/3mf+Sxr/rWT+Sxr/XcP8l7pz/w1l/ksPuP9OZv5Ll7n/tmL+S8P5
+lcx/6Uu3H+7MP8lDV9JGF+Rhq/a8PVo+Go94yty5HzlxfiKNHzViPEV9eJ8
dYvxFWn46jXvn2Gcr1wYX5GGr6wYX1EM56vnjK/oE+erz4yvqC/nK/b9BDSZ
81Ubxld0gPOVE+Mr+sj5ah7jK7Lh/FzK+Jmucn52ZvxMGn72Z/xMmVy/ZYyf
qRvn5z2Mn8mb8/Mlxs+k4edBjJ9Jw8+svlIog/PzSMbPpMP1vIDXp5Lz8yjG
z9SyNj/Tda7vboyfqU9tfqaOnJ9vMH6mOvmI6uQjqpOPqE4+ojr5iOrkI6qT
j6hOPqI6+Yjq5COqk4+oTj6iOvmI6uQjqpOPaJH26RVLXUqwdcMyx7ZTc/DK
rL/DKdsSVMxql/y4MgOx61/jZloJ7Juar7WaKcDqvuO/dXilhLA6O3CnRICh
R2fnHAlUwnBAC6Xoaw5Y/5dAR93+IoTfPHUpbYIS1oGjXd3sxVj9N2/F37xi
6PRepXoIccWz0UXpMyW0FiS0m35KAus9kkvG04uRfrH+3N23pNg86W7zhhZF
sK+W5560yENQ+lH9BpZK6Pp8DO6nUHF00b62j6YUYd217PojNxZAPiw9fb+w
EIF2N0ZIxTL4lL96HNlMCZ3hJldDMxToJp85stEdBa5Wp628+LoYHstMIpLc
CtDDYJRwVQ9Vzhr0u8v11SXIODvY2iMqFe6f9lu9cVXCTD+j9d9pmSgSNVUp
oGr9ar9MxdbiwMqWW4ph4Xy/0X6LXPwyarfN16QYGHo+funhTAyKnuaQ4qXA
t0W92he/ESLRwuLI7NEKjMh91VN+KRcxj8feKYorwMr9Q7/86CVB+t92lvN1
CrDCgybfsBXhZLMGd0dW5WP31YuGj3rK0aPyeK8CqQwjbfv3vthUioNneqwV
b5Nh4ZiBG7d0KsaSzXcXbr4rgR7PC4lazxu9ua5E2NCrtoazkjDv23jBjynF
SDzTtoeZUypy25vfGHW4GC2OT1rukZ2IyFTBhfP6CijCaz7JxMybxfI9UKBS
dMqvYkAq3j5aPudsjBzjWzTLKUjIhX/8Udcr0XJU/e0Rt2xNJuTHB8pUD7ia
vnYzfS1SrTum5/nPUhS2mbLPT5GLVd8fP4rZk4efvbZT4nspnlqMmeucL0Zk
zFX/ebPEeGY5Zuzfp0JcaOy69J7qPtYM18p/5CCA1a23o45nyZD/cnP/yisK
2PrUf95YJxHPPrhdn9eoAHsKb4eUnkmB0abwChfHAkw4OKQkpEkCTBSH1mV3
lMFJ3b8Z2Pd66JEnF2Rcz5Jx6P2siDfxYt6/uViQ5PholqGqztR6loGVDZ8b
9fuXC0d1/4px1j7qTVE3Afaq9SwXN/lc45r6OR/6g2uELA3qp6tiVOnrfxgz
uhBnXF+16iWIxvvPMxSvpuYjwGDTtQ1ecfh3p/Hu14PlKPE9trVqZiRkeeoL
HXleCPFt3phEEp5vCV0sFhmEpwlwQ+0naZi15UvIR6kQk9T+moBBcS3iyyrT
4KP2kxwMPH1pnbFhJs+3Kejl9l3f7ftzXFH7iRieP/c6/9wbi65qf82CImR8
geqBTur+DEbZo9d7+zSSwc462WJIThgMHniZVS3IR/Am9xUeFX4YfjxQ4jJY
DF0130TCZs+U6BPP8qClzmuBGPKlxlByeP6MRVyHpB4lywQwUfNeCBpfaqGX
mJWA4Wq+ScTj279X/tVKhVLNe+E43fHehlUH7mECn5/oPlrW8dD4MOSpeY+Q
b24aP2eZFKP6+nbQvuSNHocPvc+cLcJGNU/fxiJ1vshDFzWnXzcx/ee0aVhs
JpaqefoeDqnShbs0F+3V+eK2yTVbZ9VHLAapefoRbnLem6bOF3dN3J7UAPVu
uKh5OhgGaj8KwjB1vnhkormfBux+SJ/v1zW2X9Sd3585uz9azvfrp5qPA2k8
v7/h7P4olu/XALZfpLm/6jL1/ZEf368Mtl9kwe9vJ7s/0uH7FcX2iwr5+TZn
50ul/HzXs/Olej6sHmWsHmkYP98W7HwpmNfjIVaPNJifrzk7X7Lk9Tia1SPV
4+fbh50v9eH1aMHqkbby8x3K/d2F12N7Vo/0g/ePA+sfesv75z7rHzLk/T6W
9TtJeP9oeH0v7/dC1u/UiffPZdY/NI/3ux/rd+rL++c66x9y5P2+i/U76fD+
cWb9Q+14v/dn/U4Srk+bmT5RDtfXZkxf6SnXKzumV6TR129MX2ks16szTK/o
AdfXb0xfaT/Xq2FMr+gL19cCpq9kzfXqONMrCuH6Gs70lTy4XjHeyKcVXF/n
Mn2lBO4XwcwvaDb3ixjmF1TI/S+L+R+Fc7/IZ35Bldz/xjH/o1fcL8Yxv6B4
7n/DmP+RjPuFC/MLSqntf7Sc+8UP5hdkxP1vBPM/CuJ+cY75BVlx/+vEeV3j
52nMz8mV+/kU5uek4Z0yxju0hfu5OfNzGsL5Ro/xDQ3gfv6Z+TnZcJ5py3iG
ntf2c9pYm1/oKPdzO+bnJOG8EsB4hfZxP1/A/JycOZ8YMT6py2tUh8eoDq9R
Hf6iOnxGS2vzFtXhMZrC+Wot4yuqw19kyHnqCuMpqsNbZPfw/bsSkxJkNz35
XDswF12Coh0i3JS4cyPEYpGuCLsjm4zuWFKMb3bH/hvxKw/NTuUN1I4pwiQv
077+2/MxZIDZpE1lCuzw6LfS1FkB1/xFR13+KDHnfNzFHVvTkbCR+uX0UqJB
sKPAYX42Vg72j2pwqgiZ2XflzmcFMBwZoD8yoBDicLuaBwq83B9Pz5ejiezm
0b/NVHX3e3u/b33ykX894IvloUL8K+2zKae7Ei6VAxoYyJKxpXuNYBVBz/Sy
wn5HOgImU/7YbwUw4/Nb/S8HO385mI95F0xVDyGstkVYdMmTINS614XNGXno
1L7mEmOJOs/KcWZ6S4H74kI+r0r6Hzd48b50UOuhhOeLbHS7W7Bo4Uchn08J
4apKDZKKLDRQ5wcJLvuIbPtnyRH7eMQW6wGxOPnr+Yg5N1V6oM6nCfiYvTbU
vkLE5/0p0BtTE5Sy0UydPzNxXD2vSeTzfAEm+T87WBmUD92Zjw4N/ROCYZf/
rE4bLMEb9TzjGSRdg46O+ytApXp+EQ1r5z/7PZLS+Dw5Hv/VjCcmRuKaOm8l
44r2dg/t7XkwUM+7buGjR/X19z9zMVM93/KB5Vjbob5fk1HG54uONWOrrsEY
oJ5fPYEn//p67OtJ8/X/sa+nGfzrw/n86jj/+m/71F9PE/h6WrD1kGY9BWw9
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
6nUL5NDohRHTC2j0YjPTCww7rtfYVsXHf6MMj03TScQVrhevmF7A/8WunvXz
FDB62/fp+skqHvvK9MKK6QUmxPXwE6wtQPCgo19ejFdxDdeL9kwv4Du2yjDi
kQxvHY6Mc+ueq8qNTC8OM71A5sxZZXvu5aGPxbiSbtYizOB6cYDpBVJuU9Cu
pUJsnL6m74RLUlzg+l1vrVq/kcn1+ivTayy0b7XlwYhCvGt43azPtHgEc73u
zfQafh+yLwxZmI/IhjN+LnNPQkeu1/UnqvUam1e27LdHS4IZ6n5PQyXXaxHT
a4iG7Fp8ZLAQodct8tdvzoEl1+uzTK/h23b3tba7M9Du3R7VQ/V9TzF/nMr8
Efu4P5ozf8RsccMbvb6oePjvkvq7x0bAh/tjo3i1P+Jj9bTLU8Ol+PNKu6us
Khpi7o+dmD+idQ+pk+4rEaI8hi7/2DEePtwfDZg/Yu8ckW7/J9l4ceS6k7Vp
Mvpyf/Rj/ghft6Axna8l4JeaVzLwh/OHkvGH6vsw/jjF+APNvr00Ot5LDtNr
/TukJj3EDs4fsxh/4Eg3fwtlgASbJ4g6LKEAeHH+eM34Ayfq/W3rflqIk+3O
R1+8H4xwzh8fGX9gTB+dV25v0/Hu8fjl17s8w37OH6GMP+Drvn/IlUvPsRMB
z0SLo7GL81wK4zlo+O0X4zdcHrlu5pL5EmSeOLOwSY9rJk04v71h/AaxUUuh
6oGddyPiXBxumWj4rZe+mt9wm8+19qnnHr4mFiaM324zfoNUd43T0ORwbF47
7Vt/PT+Tm5x3+zLepeZ8v/qx/SIN/75wUvMvafZrDtsviuH8e5TxLx3n+7WL
7RdN4PzryPiXRvH9krL9okecf2WMf+kG36/FbL9oAM8P51l+oJM8Pzix/ECz
eD22YPVIEp4fOrD8QB94PX5m9Uj1eX54x/IDteL1GMrqkX7w/CBk+YHseD0W
sXqk1jw/dGT5gW7yevzE6pEm83xmx/IZPeL5rDfLZ2TF+/0F63d6x/PZSpbP
6AHv91DW7+TK85kRy2e0kfc78/c08uP5zJDlM8rh/e7P+p28eT6byPIZefN+
b836nVbz/Ess/5JGX38xfaVKnoevszxMD7m+6jN9JTeehy1ZHiZTrq9PmL5S
9VCWh8UsD9Mdrq+vmb5SJc/DfVkepnSurz2YvlJjnoebsjxMCVxf1zN9JWc+
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
0HOKg8jljF0fbRGaB7gmNApKhlivV+GBWSKs7T2mbfK6eLRoIiiL2pELuzYt
Rt0yT0HTEFejpLJcnLy+NsC9WIbS+nu6dCoKhVdKam/Zu3zUW6pt1HLgM+g/
3alwP5KPzinnx62PDkS7BYYOkoNypMZoJ03oG4IHnU/ecVT5yN0NSY1WtohA
5gbFynOHJBCrX8cfhbep4qk/3+fhbaLRD4+moRijcpXOXaWY/WtobnHuU0Qf
obN/snNhVpU6dcH1GJV/DBqSsUaIy+03esdnxcLrfMaQpncFeKPe33D0wtGe
XQxUddY+aMW8m1GY81fvtlNRMuaZ2WYsNUjA3bfFXm+L09HxhaD9C0EiOlfd
HCUWpEIpDg4pXhwD37nr+/5V5aN2hVYdvVrGwfS755TpVcHwmKMfpXcqFY6S
ncPmbojGv3urqh/bpsPOfqfhWMdn+M3fP3bsssOV9EuxiLNZE3HZJQlhs1yb
HV4nRujmyG5dGt3GsbUbJ6Y45aHFnYXm0okPsP/jWY9Tqrwb6Nn+3ANTZ1xd
VP175WYJGoQkec/7cgOR7ZO2SFQ5+8rvH71/l/jiQYO8ycu6C6DQnntyz9XH
GKTfsvpDcS4yXnRfcU3qhg5znln+7i/EiYxQ6p51B3t6+w+8mp4AvFyVfHic
H+Y0PtOv9YYUuO1b+XjRnmBIlRu3v36s2h/59tmNUz1RVFmw8u2HNBx16HXI
2uo+TivGJKVV++DhqbK8UT8C8a2NWDtgewiWVXtndHvwDB1KUpd8swpC9sF+
Hc8Jb8LVceKei1ERcJn+cdiEp4//t/4rbP1kz9drz9ZLR/l+fLqt3g/y5OvP
ClavnyL4+u3Y+kmzXke2XrrP9yOS7Qdp1r+arZ928fW3ZesnCV/v73z1emkW
349DbD+okK9/EVs/HeXrd2Lrp3Z8vTZsvfSB7wfYftAlvn4btn46wfsnj/UP
GfB+ac36hTT99H2Jup9I0z8xrH/oHu8fd9Y/pOmXItYvlM77KZn1E2n6ZxLr
H3rO+2c46x/y5P0iZ/1Cl3k/XWT9RD15/wxk/UOWvH/MWf9QR94vmaxf6Dbv
pxasn+gW75+mrH9oGO+fM6x/aDPvl4/8/R4HeD99Yf1Eh3j/hLH+oVZcv/OZ
fpNGr/2ZXlNvrucnmZ5Tc67fD5h+006u34lMv2kU1+u9TK/pN9fzWKbn9Jrr
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
j3Fg8xhyrZ0/KI/nE0+WT6hn7XkN/R9pNUe8
   "], {{
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      0.3], EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFnAXUVsXXxe/c+7yKiIggYaOCHYSgKCKIIrZgd3dgN3YXNgZ2dyt2Yne3
Yvu3C1u//XNv1rfWO2vmzJw5c6buM3vOmXfurcaM3q2uqurbVlXpryoK0DMp
dFLoojCzwrwK8yjM0VTVUWKcXfFxYm6nvOkUeih0T10VVZ0jg3QrcjpHJvk9
FeZKXpfInjtlnZOGZ1EJOFUCFlF8ktpbW3nrKGytsJXCusq/UeXrKD67uK22
6Izc1ZV/tTJXU3ymyhdUfLLoBRSfKHpuxceK7qn4eNG9FZ8guhex6GkkY1qF
bgpdk26XvnZLW9OkbObojO59FBZXWFFyLpW8FRSfXsxHvd4KvRT6Kv8MlfdB
L5UPoB+il1B8iuhlFU8QPZhxKB6znpG9mMIByn9K5fsrvqhY7nwKAxSWSBu9
k+6vMEp814l/LcVnFevcNXzM8crKv0LlI9GrWNfukdk7PL0iq1/6ytz1TZ/n
CU+/5A1DL8kbqvg0ydtH8eOi91Z8oejDFb8g+jDFl4geojrLKazB3KUfAxlH
hRXSLn0ZrrC8wqaqd7vqb6L4nOIxYWyQs6zCrsp/SOW7MI7FeUMiezWFPZT/
qMp3V3yByndUfL/oHRSfL3pfxU+K3i/6Xqc61yvcq3BPdBkQ3dDp2so8lN2t
sKXq3aX6Wyg+V/W3VXyP6G0Unyf6mtSBd2J075MxGJIxZCyHKQxNun/6Tt5a
zKnCFgqbh2dq/poKoyvvGfbKlgpHq92X1f5RrMtiOcPDNyrpFVKHvLHie1b8
Byu+uLiMuVgnPKPCt2V0WC1ju4nCxulL3+hFnzaUnFskbwPF44t1XCu6bxae
odF96hog3jQy10jZZskblrEYFTmDGGfJX0rxOMm/T/Hfoh9QfLPokxW/Kfok
xZcXy0TOLgo7J43sXZO3cdqlbCeFQxUOUxincEryKDtQ4QCFcyV3suSfo/iq
4n4xLmMUdlM4S/nvq/xMxVeq/DTF74g+lX0n+hLFn4u+WPE1oq9Q/D/Rlyu+
tlgndDtY4SCFC5T/icon8J0rbou52D1tbpax3S31rhHfN+K/mu+A+O9W/Lvo
iYpvKu4DfTle4TiFO5Q/ReW3851V+R7K21Ph8IwD6b0UjkjemLTNOB2S9B7h
JW9x/UBsI3kPSt4wyXuIHwh9RB9hXRTP0z8pZ762zNrdI7JuUP73Kr9e8fXF
faJvYzMmB2ZcTkgfDk7ZSQonhndMdBubQPrk8OyceT8osm5ROz+pvZsV31Cc
f3Bk0Qa/Q9tkDPaMrlsnvUdkH5q1QhsPS86/Lfeb/p4QWeexdhTuV/5fLa9b
+j9Jca3xeUzxrcVzQr/OURiv8JTy21T+pOLbVP6c4nain+W7KPo9xTOLflfx
xOK6J6QtZLyl/JlU/ibfqWId0fUChQlJs9YvTN6JGafzo/NJ6deE5L0kOdNL
3ouK75C81xR3FP2q4juLZZ2qcFFk8rv1tPp7YH6/xkevqxSuVPhB+fOq/vd8
l4vbpB2+mdekXfTim3xd+nVeyq5OGe3cEJ7jJec1tXec4suK1+Xh0WlcZE+I
LNr4Rnw91f7Xiu8r1u3cyEbHT5U/q8o/4buu8i8VzyH6C8X3iv5F8Xyif1b8
QLEu9P3G6HRVZN2lcGf6fFXSdyhMVr3uqv+h4ruLeenbxNSZRvtpdH6fehT/
rj7R8u8Wv1fTqnxt0QeJnqX4d+s+hWcUnlboqrIhkj+z4seL20Xu4wqTFGbg
W6ryDoofU/nvkrOg6N8UPyh6JuUvI7qT4knFv3v3RvZTkYWuT0Qmv3P3pOxJ
hS9UZ0XVHS55f1Q+J1wsevmcF+7IWKDLY5XPacepfJ7G57U5FR8jeq7G59GJ
aePJtPmi8gan/CPRfyteRPr+xblAZW0q6ye6pfgR0dMpHiC6neJHRc/B2U30
7IqfLB63ZxXeUXhbYYDy11P5EoqfL+4XfX9L4c3ojO6vKrySsmdSF57eqreK
6vdS/HRxvy/JeNB/ztlHt9xP+tdX6bXF30fxc6KL4sU5hCp+WPRovlPwND7f
DVJ6Q5UvpfgF0bMoHia6h+InOA8rXl30AoqfEb0oZ0PRiyh+lvOx4pVE91T8
lOjPOAMovZzk/6ZmR/A7Ck/j8+0Q1l3KOa8O5FwmesnG59l3FYais+hvK59z
x7fMR/liyEk55/23FJYTvbDorxhDznCi5xX9aWVccFrL9eDn3H6i6Pkan98n
KwwT3Z/veOVz9pnMeePz9ufaH13zfVyb8Q9N/uWV+c5Kffj5lg6rzUsddANT
gCUWzlrct/ZaY829XowvDlJeh6wF9sFrWRMf0WbG5+fKuOQU0QtFJuf061ue
V+ZzDc4BotdsjGe+UxgZupTsi4wP+wPccVnL88T8gCMuaHmemJ//KYzI/P1V
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
B9m0QRky8EXC16hDbX+jW2rf53Ivin8QfkLcj94Umnzum28JP3WRQdlN6R/3
y/TlhaxB5hte2kAWMpuUH5712jH6oSf3w6TJ4+4XHyLy8Y+6M+Wdavsz3aF4
o8q+SbekP9y/kibv9vRnxtrvM9qyHttCH531h+6MOXNDHyijztzFvlO3Rx66
oNMdaZ8yeEijE3fPU325bst8cl99Z/SnDB7WM/7Sx2c9kuYuHl8jfK8m5ntC
mry7a/uzsTfYI+2j702Zj86R1y7rY5Pa/sVrKb6d34PUR842lX2Zeta+e8an
CTvCm1lzyLuntj8UflH473D/jf8U/lHc/3dNOXzYB6B5L3FBysnHH+n+lCOb
NpCFTOaW9xpnZTzbp/2Tsx+QjUxk0SZvObA14OuFb1P32v5N99W+z6dv9BHf
IewjlMHD3T8+UPdHH9LkTUx/7s33+r7IQzZtvJ1vOWPP/T9vT2YVvUixbxbp
yZlz1t8Dtf3N8DvDf4v0LLVtCVN9ze6L/thHsDOQRxk89+W3nN/r7fN7Tx6/
W3xfZ4l82sHe9FBt/zB0QSfGEtsKbaPDfZH/YMZntvBTb8fK9974k+FXxv13
j8xHx+yvB1L+cNp7L3PN/GFv6ZT+n5v1jGzaQBYymat3sufZfx1Cn5bvycfp
C/piH8Iu83nmDH3xrZuztm0BHzvS5D1a2/7xSG1/P+wP2CseCw0vdViL2K7w
HcNXjzLq4HuHfYu3P9ju8I3EN+7RyIeXOuiCTviy4fs3qfaeIU0e9hj8Edk7
7KHu0f+SrK8voyuyLot88h6P/rT9v6yRHTK/0FdkPcxT21/vidr+aPin4Q+J
/91//rmhn045+uEPh51l38w375Guyfw+Vdt/Dz++AaLnTflsWQ9TcubZMefb
ObKfu2b/IntSxgP7yJNpDz887Efois6kyUM2bdDWVN/BXrV1n+rb+UTGH/sU
dq3vM+eMD2nyuCu6PvNP3g2Z356Zj0npb6/0j37uX1k2OjG3tIEdGHswd6DY
F/k28o3crdj3aNPa/kc1c8XvSW1/QfwG8VdcJDT52JvwE5ySPjP+pMmDlzrY
Z/CvxD8Se9xCtf0lX6ht70EWMrFN4ZP4TG08CC48sjJOpD5yjqqcfi7jgX0Q
38C3a/siYs9arPb7JGxEQ7N+0OmOzA+81MGudWbwKO+lsMOBP1+r/T4MexP2
LN4aYSvEFxDfuvdS/+mMH7qiM76h2CeZD95z3ZL9wNvAvrVtV7w9eyPySZP3
em0e3mPh/9g3NPnYJ//MWDOe+Gdi1yPvnvSPccTf8+WMJ2PLGDPWjPl8td97
YZfEHtkn9HwZX3TFFonvKb6sL2R+SJMHL3XQDR0XTP96Zr29nPaZO+bwt8wt
dbF30lfGlLd42E9Zn7wHvDv7l7laSnmrFPt2sj7xF323tv3zzdr+otgFsQeS
Jg/fUuyL+J4OqG1bxLf0nfCTJg+7Iu/bFsr44Fv6evqDvZi1x/u2p6I/a6Ff
5POGjrpL1P/v68r6oU3S5LFfeF+DHQP7xY6hyWf/DAj/21lv+LZN39hXDfsj
b7fWVNmWxb6PpMlbQfEVrPfa/pCUwTNNfDlYe6xBxoL3jeiKzv1Dv5nxYj2x
hl/KelsmdN+sL8YZ/9kPMt7tM/b4ZmJffb+2vy1zwxwtlf3FPju28tgNDD++
vgtlvCdlvw9KfeScXTlNHrZPfHexazMn+P2umP0A/Vb0+yD6wUsd+kYf4aXO
wMzfIvkevZv1gy7o1C/7e4F8P/iu8X3jW8c3b9Gsx175XpImb7liX3DeLmL7
xhcX399Pa/v/kiaP+YXnray35UIPyHzjazyktm0XX2JsMeThh4xNZmjkIfey
ynblGeK/i30Zu3Cn+CsjY3Jo8i8R/3e1/W2xa2LP/M/3travLfZHeCfn+4W/
wI/hx08X+y2+w7xFwrcY+zR25FniX4w9eXBtf+LJaQ/f39Vq10XGh9EXvS+u
nCYPX2r8A1jH+Ct/mfXcI2sb2bTB28Photct9m3+MvykyWNcsG99kfHBV5o3
VNi6sHlhF8bGhV8z9uEhGV/G+dLKdT/N/GHvY+3R5uSsJ/wMOmZNsV9Ik8fc
MEfDwz8o67d/+F/LemXumEPafjvziz6fpf3PM56M6+X5PeX7/WrWK3b9edMn
yn+oPcb4WeOvjr0cf3L8sbGffxOafOznq9T21/4u80+aPHipw3jwXvTLrJ+v
avufY0fHfo4sZOL7jb8Cfg68Nx2c+V459YekP6RXzvr6Ir+3vJd4Jd8D0uTx
28Rv1HfRD17qvBJ+9tZyWc+sL35bWaMd0jZrnz3wQ/Yuv83cEa+W8WGcsO+j
60rRH193+oK/O2nyeoeXsfwp65Hv6y9Z3/gLwIMfOv4OP4T+OfKZG+YI3298
3ZfPfOFDwRrE7t8za4D1ydgyxvjK4z/yU23/eOoiY43Q5OOPgK4ja/tK4KP/
beaHNHnwUgfd0HFk+vdN5n9o2v8m65/0qukva2hw5vPTfE9mbOw/jR/1QcW/
RfwmYe/Gno7v+A61bd/4Yo+o/R4XPwj8H0aHHpH1s0D6Qt/wN8FXvK2x7zj+
AevW9sf/o7a/AbzUmZL+/1bbfx8/fvzjp0wtb+x/wW8f2J00efiNLJIxo/+k
ycP3Ht9/7Pn48+PXj3/EyPD/nfFce2p7te399IU+0TY6/BF9kYVM3hr8Wvvt
AP4xfdMXyvBPIU3e3+kfe4/3sviwsAdJ42vCWwDeMnTMeDO2jPF64V8l+3f9
2u9n8eHAP4S3D+SR5u3BYtEdffG3+S39/TP9gZc6f9X2J8EPpl++2aznf2r7
f+IHynuC1VKODw3f9A1TDt/DlceCOWQsGdO/0986+lGXNpCFTMaWMcbXhTcZ
jB1jiP8L/jK/h6YMHt4+bFzbN4Q3EPxDH/J4F4H/PjTvMfAPeaRymjzK8Neh
Ld6H42eDPGQNDA/8vLXG9wd+ZDaR1zHnNcoGZI+xHjkbcHajDB7WHhgJvyDW
IG/Z8Z2Z+pZiyYwV/cc/Cj8X8ujLrtnvyMeHij0ML+XwMb7TNn6PgSxkIntI
xpz1tFXtcvjwp+GtxxbK27P4bcU0jd9XkCaPvQcP70LYg/AOzp7E3wY/It4/
4P+LPxFzzZyTJu+vlP+b9bN11uP6oWmr1fitCP5um2f81876a5dvAO9G9o4+
0O3SPrzUQTd0pG/0Ed5u+V7Qf3yMWHOt9I9+8i5+iaxt9hP+XuiGjrw16RH9
Wf/sNXjwLcPHjLcS+AOR5r0F7y7IY375xnDO5n6QtyC7Kn1osW9+58Z5vBPh
fcd2td+vTJ/vJbL2Ut7RxW84KIMH3x7etlC2fnT4sPJbEmQiC/+eWRq/J6Eu
Mvj28t5/QL4Pe4YmH/+lGRq/Z8HfCLpb6iPng8q81KFv9JEyeHhLgn8UeqMj
73DAIPgh8f4GXdGZtzzb1PYl4+0N6473N+2z/oZnLbJW8S9rn3J4qcPYrZE+
vlfZj22FrDHWe6foz7sc/KVoizana+yftmH458j6HJEy5hf/NPY3/y9g7uyv
6aJ/h9TfPuXwsf+RhQ70lT7DT3usFWTCSx3eMvF2aubG73e6K36/sl8ia4h3
JseKp2vjOeT9zuGix9R+zzNz+Gdq/J6ji+J3M1/8piKbNljr/D+EBbM/eKuz
h/KOLH6zQ11k8NYBfzr+F8N/b4KK3/bAu07mlPlmrcHTN/PXOfp1zfjvnnL4
Xsx6oT6ykAlWBbNyFuBMsFPt8wHnhJfFv0/t90Wzip5cua/0mb4zBvwvB3wL
p75t4n9B7C36mOK3Scgjb1DmGznIowwe0rTB2DLGtE0deFkje6c+eejDeqHN
RbPeWEuMMWOLv+K6mQv06Z/5RGd0I2+31EcO64W5wFeR/cge75L5Y+/zDeie
9cDcMEe7ZP6YR/YD+3JkdGA//h8EhZ5y
         "]], 
        PolygonBox[{{23, 24, 481, 243, 647, 39, 38}, {69, 70, 518, 280, 684, 
         85, 84}, {84, 85, 529, 291, 695, 100, 99}, {38, 39, 494, 256, 660, 
         54, 53}, {129, 130, 559, 321, 725, 145, 144}, {188, 189, 606, 368, 
         772, 204, 203}, {173, 174, 593, 355, 759, 189, 188}, {144, 145, 570, 
         332, 736, 160, 159}}], 
        PolygonBox[{{608, 205, 619, 381, 785, 220, 219, 204, 774, 370}, {531, 
         101, 540, 302, 706, 116, 115, 100, 697, 293}, {115, 116, 549, 311, 
         715, 131, 550, 312, 716, 130}, {496, 55, 507, 269, 673, 70, 69, 54, 
         662, 258}, {9, 10, 464, 226, 630, 25, 465, 227, 631, 24}, {159, 160, 
         581, 343, 747, 175, 582, 344, 748, 174}}]}]}, {}, {}, {}, {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwt0TsohWEAx+EPx/1aQo4iWbEpAxlsKKUsWNgoJNSRIrnOBkYTg5ldsViP
++0cSokoBoNFnrcMv/7nWb7vfO9bPzLZN5ERRdGSMhV+l6lOzWpXjwY1pjlt
aFt7OtSJznSuC13qSte60a3udK/yrCha9JJxL3vgCl7iSU5xFS/zFKe5mld5
mh+5htd5lp84zms8w0ku5Xke5ePwTRw+cIgP+NsOc6/d5Vfbz512i1O2i1vt
evgu28FNNsGntoUb7Cgf2UaO24FwHraeS20379tKjtk23rGF/BOeyZv8a9+5
1q7yl02HZ9gV/gz/i0vCPfFHOE8utgv8Fs6ai+w8v4R74EKb4Geb5AKbrzzl
KkfZiinr//7/AN4MPrM=
      "]]}}],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{0., 0.7}, {-0.5, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.682373571939104*^9, 
  3.682373589109968*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQe4lcXRx49eQMUeI6CJipJoYo0mMRp7jzGxJppqxAIqFgRFscSCSgcb
CkiNxAgKGpHeFAUhFwFBRLBFUMH4xfIZ1EjM++1v353DcO6cc3Yv+D0+Ptzn
uQfunvf9z+zM7Oxsm/15yysvvODSlldedF7L5ie0a9n2wovOa9/8+MvbuaKa
jQqFjQ51v481L/D/rFCQD/9zGB/hjyr/39X/s1U2b9687Oabb85uvPHG7NFH
H83++9//+sdatWqVLVu2zP/feKaZf33Taq9v7B+ryT799NPs4osv9n/lrzau
Svnhhx/OWrduXcOLDqJ79+5Z+ClsH8k8f48aNcp/f91112VDhw6FlaZxzNcE
5l988cWsV69eivk4ymPHjs2uvfZaT3nEiBHZ6tWrmyZI/bnnnvPfA9G/f/9s
1apV+eubR72+ePHirEuXLu5pr+/m/p+ts3/9619Z+/bts/feey/7/PPPvVjn
zp3rX1mxYkX22WeflXumkJPfLAajYGk+f3+LKB7mz5+fde3ale93SGC9trbW
64r/88yQIUOyxx57rNAkgXVL700TeFi4cGF2ww03ZB999JF/5v77788mTJgQ
eIjD+OCDD7zi33//fa9d7GfYsGEBY8soDH747uqrr/b1aqwtoVH27LPPZv36
9ZNGlT3zzDPZwIEDayp/3bTy1w3Lqr0KwQa+moMGDcp69+6dvfvuu83i2Jwx
Y4YXuPwsWLAAhCZxbw8YMCDr0KFD1rFjRy9OWHYNK4rjRr6pLV++vPj10qVL
s27dukXS5s/BgwcXv3711VezW265pcrbImBnDNmcOXP8X5utrdhx48Z5e5Gf
RYsWYR81lb9uWvnrSoot80oD/3VDr9hZs2Z5IY8fP56/C00qv9ooUMN8qalz
4tVeqQnUkBOtnp/QggvNKr+6SaCGy7z99tv9X9vHCXPMmDHegJzBemYfeugh
epkqvIowUTnmbigRQZW+6apSU/nrppW/rqTEMq+IJj7++OOsR48e2eTJk4ua
qEilQTZ9+vTs0ksvpUlk//nPf6q8JfoTN4D9l+qvilAQ57333uud5ieffOJF
+/jjj0cRbpRNmjTJv33XXXd59w0Tzs1WeVvk45qm9z2ZjyzWUiW237dv3+Kb
yMWB11T+umnlrxsEukuWLPF+gCCpWRxB2HRiKX6NlJXbqvL2O++8U4wxXEST
9enTJ5s5c2aVtxsEm8DyaGJTp05FepEcr1y50rvnzp07+16RVuZ6tEiO6RdR
qvz8+9//1oot87Yo9sMPP8w6derEW6WKpRO+8sorvUjocKnY888/X1P566aV
vxbFIiGKtGKrEHzjjTf81wQFfD18+HBcYZO4t91/fRFf8duzZ0/aRJW3xaW8
9dZbWbt27dZqrhUJ5s79iiuu8P3BDnE8UoS7ff3113EpPi4ePXp0FR7Fv0+b
Ns2Hy/yVl4VhUENvIzR6+qiRI0d6nhpU+K5Zhe9EJDDId1lx3FCZztNPP+0j
empAq3LxY/DO9nsiFDwmqibO412ihuIox35VjJvoae2hTWUWYY+OQ36dkVZk
Ud7DYbjBiNcdVXPsRVSthrBZaLkRRT4QbNu2rTTVUI+oAW+5/++QQ7mhUws+
NlKljhgjKiHWILKs4Zf8uS8TLxt4/nI9V7Zso9LG4Z/5Kld7A88beC5X5me3
aqr0F5sbZS2Mst3WoWxd8Dx/ddr1V7ES/nOXDU9uePL/88nJoWzVJ6uz9z/6
NHvr3Y+c4/j7ig9rskWv/c/GWe3ilQyc3v2o+MYvTViP+pgv2NqD8cr8l/+R
zVjwZjb66VeyYeMXZfc8PDe7bciz2bX3Tc/a3jE1a9V5fHb2zWOy828bl7Xu
MiG7rOcUR7zdHVNrso73TXd0bxowgz95OadbzZ0N95+Nsn+8vwr+syfnLsuG
T16c3TroWYA2zs6/fXyhMYSg4IvvHvFcNvCvC7IHJ76YjXpyaTZh1uv+tVkL
326czVvyDvMm7mv4B/vMGKk+4D+39IKAjfHPvpYNfmKhr7zjIGvddUKRfv9H
52d/mbg4++v0V7Jnnn+zsH0gOiCV6CD/uXn22erPPVGkjsSvuvtJL2kI9vjz
37IhjhGIuQoWmgRiI6cu5X/hL/e5MfyeFUO2v//czIscZVPPG+9/JmvZaawn
eZeTL7KdUvuGc445gQfGLcr6P/Z8fN3u9Z+bFonw8kVdJ2Ztuk/0Qhyc12mP
+uLfFfCRHVYLHlaKVWKEALoK7BXw0ReijcbPp0838fyjFwzh3FvHeQFhAGNm
vFrYL4CPmPJS1vuhOfHgPQI4TQ5wGG7TfVLW5U+zveRR9AEBHMVDPBq8a2hR
ziVkI6ct8VJB6r3+MgewAwMurea6vk/H494ecEUiNEl+MZexM147OOA6oXsD
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
V1kAG3jewHPFsjr9RZ1EkL4s3/pRKGz0f+6VNGY=\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682370620783197*^9, 3.682370621533661*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{
   RowBox[{"-", "10"}], ",", "10", ",", 
   RowBox[{"1", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682374050788221*^9, 3.6823740564227667`*^9}, {
  3.68237412673177*^9, 3.68237414549084*^9}, {3.682376269231853*^9, 
  3.682376277360509*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "10"}], ",", 
   RowBox[{"-", 
    FractionBox["19", "2"]}], ",", 
   RowBox[{"-", "9"}], ",", 
   RowBox[{"-", 
    FractionBox["17", "2"]}], ",", 
   RowBox[{"-", "8"}], ",", 
   RowBox[{"-", 
    FractionBox["15", "2"]}], ",", 
   RowBox[{"-", "7"}], ",", 
   RowBox[{"-", 
    FractionBox["13", "2"]}], ",", 
   RowBox[{"-", "6"}], ",", 
   RowBox[{"-", 
    FractionBox["11", "2"]}], ",", 
   RowBox[{"-", "5"}], ",", 
   RowBox[{"-", 
    FractionBox["9", "2"]}], ",", 
   RowBox[{"-", "4"}], ",", 
   RowBox[{"-", 
    FractionBox["7", "2"]}], ",", 
   RowBox[{"-", "3"}], ",", 
   RowBox[{"-", 
    FractionBox["5", "2"]}], ",", 
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", 
    FractionBox["3", "2"]}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", 
    FractionBox["1", "2"]}], ",", "0", ",", 
   FractionBox["1", "2"], ",", "1", ",", 
   FractionBox["3", "2"], ",", "2", ",", 
   FractionBox["5", "2"], ",", "3", ",", 
   FractionBox["7", "2"], ",", "4", ",", 
   FractionBox["9", "2"], ",", "5", ",", 
   FractionBox["11", "2"], ",", "6", ",", 
   FractionBox["13", "2"], ",", "7", ",", 
   FractionBox["15", "2"], ",", "8", ",", 
   FractionBox["17", "2"], ",", "9", ",", 
   FractionBox["19", "2"], ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.682374056969721*^9, {3.6823741336799707`*^9, 3.682374145771983*^9}, {
   3.6823762719075193`*^9, 3.682376277685566*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "y", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "+", 
        RowBox[{"y", "*", "I"}], "-", "1"}], ")"}], "10"], "/", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "+", 
        RowBox[{"y", "*", "I"}]}], ")"}], "10"]}], "\[Equal]", "1"}], ",", 
   "y"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682376604690709*^9, 3.682376686070047*^9}, {
  3.682377980738105*^9, 3.682378007021044*^9}, {3.682378064267046*^9, 
  3.682378082002446*^9}, {3.68237887667929*^9, 3.6823788767690496`*^9}, {
  3.6823820332278643`*^9, 3.682382033361183*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        FractionBox["1", "4"], "+", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     SqrtBox[
      RowBox[{
       FractionBox["1", "4"], "+", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SqrtBox[
       RowBox[{
        FractionBox["1", "5"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       RowBox[{
        FractionBox["1", "5"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SqrtBox[
       RowBox[{"5", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       RowBox[{"5", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        FractionBox["5", "4"], "+", 
        FractionBox[
         SqrtBox["5"], "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     SqrtBox[
      RowBox[{
       FractionBox["5", "4"], "+", 
       FractionBox[
        SqrtBox["5"], "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.682376625902083*^9, {3.6823766789931993`*^9, 3.682376686300264*^9}, 
   3.6823779816513367`*^9, 3.6823780187738333`*^9, {3.6823780659239683`*^9, 
   3.682378082224923*^9}, 3.682378877661686*^9, 3.682382033614131*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682378032374873*^9, 3.68237803850939*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "+", 
        RowBox[{"y", "*", "I"}], "-", "1"}], ")"}], "10"], "/", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "+", 
        RowBox[{"y", "*", "I"}], "-", "2"}], ")"}], "10"]}], "\[Equal]", 
    "1"}], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.682378015790298*^9, 3.682378079093564*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "5"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            RowBox[{"2", " ", 
             SqrtBox["5"]}]}], ")"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "5"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            RowBox[{"2", " ", 
             SqrtBox["5"]}]}], ")"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "-", 
        SqrtBox[
         RowBox[{"5", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", 
        SqrtBox[
         RowBox[{"5", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "5"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            RowBox[{"2", " ", 
             SqrtBox["5"]}]}], ")"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "5"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            RowBox[{"2", " ", 
             SqrtBox["5"]}]}], ")"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "-", 
        SqrtBox[
         RowBox[{"5", "+", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", 
        SqrtBox[
         RowBox[{"5", "+", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6823780169522667`*^9, 3.682378083602124*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"1800", ",", "360"}], "]"}]], "Input",
 CellChangeTimes->{{3.682380328361682*^9, 3.682380356935582*^9}, {
  3.682380465269166*^9, 3.6823804705319138`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.682380333909121*^9, 3.682380336596677*^9}, 
   3.6823804707919483`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "20"}], "q"}], "\[Equal]", "1"}]], "Input",
 CellChangeTimes->{{3.682381889905442*^9, 3.682381912770975*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.682382226069026*^9, 3.682382236303831*^9}}],

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"x", "-", "1"}]}]], "Input",
 CellChangeTimes->{{3.6823822403880157`*^9, 3.68238224583543*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  RowBox[{"I", "*", 
   RowBox[{"-", 
    SqrtBox[
     RowBox[{
      FractionBox["1", "4"], "+", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["5"]}]]}]]}]}]}]], "Input",
 CellChangeTimes->{{3.682382540887755*^9, 3.682382551919558*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox[
    RowBox[{
     FractionBox["1", "4"], "+", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["5"]}]]}]]}]}]], "Output",
 CellChangeTimes->{3.682382552949994*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"convert to exponential\"",RowBox[{
     FractionBox["1", "2"], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{
          FractionBox["1", "4"], "+", 
          FractionBox["1", 
           RowBox[{"2", " ", 
             SqrtBox["5"]}]]}]]}]}],RowBox[{"With", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"n", "=", 
             RowBox[{"Abs", "[", 
               RowBox[{
                 FractionBox["1", "2"], "-", 
                 RowBox[{"\[ImaginaryI]", " ", 
                   SqrtBox[
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SqrtBox["5"]}]]}]]}]}], "]"}]}], ",", 
           RowBox[{"a", "=", 
             RowBox[{"Arg", "[", 
               RowBox[{
                 FractionBox["1", "2"], "-", 
                 RowBox[{"\[ImaginaryI]", " ", 
                   SqrtBox[
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SqrtBox["5"]}]]}]]}]}], "]"}]}]}], "}"}], ",", 
       RowBox[{"Defer", "[", 
         RowBox[{"n", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "a"}]]}], "]"}]}], "]"}]},
  "HiddenFunction",
  DisplayFunction->(FrameBox[
    DynamicModuleBox[{Typeset`open$$ = False}, 
     PaneSelectorBox[{False -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
       True -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}, {"\"\"", 
            StyleBox[#3, ShowStringCharacters -> True], "\[SpanFromLeft]"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, FrameStyle -> {
            Dashing[{0, Small}], 
            GrayLevel[0.85]}], "Grid"]}, 
      Dynamic[Typeset`open$$, TrackedSymbols :> {Typeset`open$$}], ImageSize -> 
      Automatic], DynamicModuleValues :> {}], FrameStyle -> GrayLevel[0.85], 
    RoundingRadius -> 4, StripOnInput -> False]& ),
  Editable->False,
  InterpretationFunction->(#3& )]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["5"]}]]}]], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "4"], "+", 
          FractionBox["1", 
           RowBox[{"2", " ", 
            SqrtBox["5"]}]]}]]}], "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.682382564629627*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{
     FractionBox["1", "2"], "+", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["5"]}]]}]], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{
           FractionBox["1", "4"], "+", 
           FractionBox["1", 
            RowBox[{"2", " ", 
             SqrtBox["5"]}]]}]]}], "]"}]}], ")"}]}]]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.6881909602355868`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.6823825674266357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"convert to exponential\"",RowBox[{
     RowBox[{"0.5`", "\[VeryThinSpace]"}], "-", 
     RowBox[{"0.6881909602355868`", " ", "\[ImaginaryI]"}]}],
   RowBox[{"With", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"n", "=", 
             RowBox[{"Abs", "[", 
               RowBox[{
                 RowBox[{"0.5`", "\[VeryThinSpace]"}], "-", 
                 RowBox[{"0.6881909602355868`", " ", "\[ImaginaryI]"}]}], 
               "]"}]}], ",", 
           RowBox[{"a", "=", 
             RowBox[{"Arg", "[", 
               RowBox[{
                 RowBox[{"0.5`", "\[VeryThinSpace]"}], "-", 
                 RowBox[{"0.6881909602355868`", " ", "\[ImaginaryI]"}]}], 
               "]"}]}]}], "}"}], ",", 
       RowBox[{"Defer", "[", 
         RowBox[{"n", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "a"}]]}], "]"}]}], "]"}]},
  "HiddenFunction",
  DisplayFunction->(FrameBox[
    DynamicModuleBox[{Typeset`open$$ = False}, 
     PaneSelectorBox[{False -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
       True -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}, {"\"\"", 
            StyleBox[#3, ShowStringCharacters -> True], "\[SpanFromLeft]"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, FrameStyle -> {
            Dashing[{0, Small}], 
            GrayLevel[0.85]}], "Grid"]}, 
      Dynamic[Typeset`open$$, TrackedSymbols :> {Typeset`open$$}], ImageSize -> 
      Automatic], DynamicModuleValues :> {}], FrameStyle -> GrayLevel[0.85], 
    RoundingRadius -> 4, StripOnInput -> False]& ),
  Editable->False,
  InterpretationFunction->(#3& )]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"0.85065080835204`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"-", "0.9424777960769379`"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.682382571064931*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"36", "*", "10"}]], "Input",
 CellChangeTimes->{{3.6823827727211227`*^9, 3.6823827812649527`*^9}}],

Cell[BoxData["360"], "Output",
 CellChangeTimes->{3.682382782907159*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "36"}], "*", "10"}], "+", 
  RowBox[{"2", "*", "360"}]}]], "Input",
 CellChangeTimes->{{3.682382792340301*^9, 3.68238280528631*^9}}],

Cell[BoxData["360"], "Output",
 CellChangeTimes->{{3.682382797601664*^9, 3.682382805699548*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"18", "*", "10"}]], "Input",
 CellChangeTimes->{{3.682383002381155*^9, 3.6823830119314623`*^9}}],

Cell[BoxData["180"], "Output",
 CellChangeTimes->{{3.682383003853936*^9, 3.682383012436822*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"range", "=", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "72"}], ",", "72", ",", "18"}], "]"}], "*", 
   RowBox[{"(", 
    RowBox[{"Pi", "/", "180"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.682383064195387*^9, 3.682383072127589*^9}, {
  3.6823834827404613`*^9, 3.6823835021392117`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], "5"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"3", " ", "\[Pi]"}], "10"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "5"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "10"]}], ",", "0", ",", 
   FractionBox["\[Pi]", "10"], ",", 
   FractionBox["\[Pi]", "5"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "10"], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "5"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.682383072344589*^9, {3.6823834845743217`*^9, 3.682383502352166*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "1"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", "*", 
    RowBox[{"Cos", "[", "range", "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.682383515817585*^9, 3.68238351963969*^9}, {
  3.682383670946815*^9, 3.682383671134015*^9}, {3.682383837262659*^9, 
  3.682383844902404*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.6180339887498947`", ",", "0.8506508083520399`", ",", 
   "0.6180339887498948`", ",", "0.5257311121191336`", ",", "0.5`", ",", 
   "0.5257311121191336`", ",", "0.6180339887498948`", ",", 
   "0.8506508083520399`", ",", "1.6180339887498947`"}], "}"}]], "Output",
 CellChangeTimes->{3.682383520020853*^9, 3.6823836714684258`*^9, 
  3.682383845272142*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682382784553322*^9, 3.68238278814261*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "y", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], "+", 
         RowBox[{"y", "*", "I"}], "-", "1"}], ")"}], "10"], "/", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], "+", 
         RowBox[{"y", "*", "I"}]}], ")"}], "10"]}], "\[Equal]", "1"}], ",", 
    "y"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.682383863208959*^9, 3.682383894407984*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "0.6881909602355868`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "0.6881909602355868`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "0.16245984811645314`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "0.16245984811645314`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "0.3632712640026804`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "0.3632712640026804`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "1.5388417685876268`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "1.5388417685876268`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.682383864771401*^9, 3.682383894799549*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  RowBox[{"1.5388417685876268`", "/", 
   RowBox[{"(", 
    RowBox[{"1", "/", "2"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682383938279982*^9, 3.682383954284955*^9}}],

Cell[BoxData["1.2566370614359172`"], "Output",
 CellChangeTimes->{3.682383954593336*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["1.2566370614359172`", "\[Degree]"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["72.`"], "Output",
 CellChangeTimes->{3.682383975879161*^9}]
}, Open  ]]
},
WindowSize->{956, 1041},
WindowMargins->{{2, Automatic}, {2, 37}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 193, 5, 32, "Input"],
Cell[776, 29, 148, 4, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[961, 38, 92, 1, 30, "Input"],
Cell[1056, 41, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1165, 47, 99, 1, 32, "Input"],
Cell[1267, 50, 145, 4, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1449, 59, 120, 2, 36, "Input"],
Cell[1572, 63, 102, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1711, 70, 120, 2, 36, "Input"],
Cell[1834, 74, 167, 5, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2038, 84, 119, 2, 36, "Input"],
Cell[2160, 88, 108, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2305, 96, 122, 2, 36, "Input"],
Cell[2430, 100, 164, 5, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2631, 110, 120, 2, 36, "Input"],
Cell[2754, 114, 119, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2910, 122, 119, 2, 36, "Input"],
Cell[3032, 126, 174, 4, 51, "Output"]
}, Open  ]],
Cell[3221, 133, 366, 10, 42, "Input"],
Cell[CellGroupData[{
Cell[3612, 147, 145, 3, 32, "Input"],
Cell[3760, 152, 490, 14, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4287, 171, 145, 3, 32, "Input"],
Cell[4435, 176, 464, 14, 32, "Output"]
}, Open  ]],
Cell[4914, 193, 450, 14, 35, "Input"],
Cell[CellGroupData[{
Cell[5389, 211, 155, 3, 32, "Input"],
Cell[5547, 216, 150, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5734, 224, 209, 6, 32, "Input"],
Cell[5946, 232, 172, 5, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6155, 242, 550, 18, 132, "Input"],
Cell[6708, 262, 168, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6913, 271, 782, 25, 63, "Input"],
Cell[7698, 298, 472, 14, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8207, 317, 362, 10, 58, "Input"],
Cell[8572, 329, 200, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8809, 338, 209, 6, 32, "Input"],
Cell[9021, 346, 99, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9157, 353, 211, 6, 32, "Input"],
Cell[9371, 361, 82, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9490, 367, 235, 7, 42, "Input"],
Cell[9728, 376, 145, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9910, 385, 167, 4, 36, "Input"],
Cell[10080, 391, 145, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10262, 400, 265, 8, 42, "Input"],
Cell[10530, 410, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10639, 416, 119, 2, 34, "Input"],
Cell[10761, 420, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10868, 426, 269, 8, 36, "Input"],
Cell[11140, 436, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11247, 442, 269, 8, 36, "Input"],
Cell[11519, 452, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11628, 458, 163, 4, 36, "Input"],
Cell[11794, 464, 122, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11953, 472, 138, 3, 32, "Input"],
Cell[12094, 477, 104, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12235, 484, 2220, 52, 46, "Input"],
Cell[14458, 538, 205, 6, 41, "Output"]
}, Open  ]],
Cell[14678, 547, 514, 16, 42, "Input"],
Cell[CellGroupData[{
Cell[15217, 567, 257, 6, 32, "Input"],
Cell[15477, 575, 210, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15724, 585, 210, 6, 32, "Input"],
Cell[15937, 593, 144, 4, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16118, 602, 2424, 58, 55, "Input"],
Cell[18545, 662, 325, 10, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18907, 677, 237, 7, 32, "Input"],
Cell[19147, 686, 138, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19322, 694, 238, 7, 32, "Input"],
Cell[19563, 703, 102, 3, 57, "Output"]
}, Open  ]],
Cell[19680, 709, 86, 1, 31, "Item"],
Cell[19769, 712, 367, 11, 43, "Input"],
Cell[CellGroupData[{
Cell[20161, 727, 487, 13, 35, "Input"],
Cell[20651, 742, 95879, 1583, 321, 66537, 1101, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116567, 2330, 240, 7, 32, "Input"],
Cell[116810, 2339, 188, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117035, 2349, 197, 6, 35, "Input"],
Cell[117235, 2357, 183, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117455, 2365, 312, 9, 32, "Input"],
Cell[117770, 2376, 168, 4, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117975, 2385, 380, 9, 35, "Input"],
Cell[118358, 2396, 1736, 55, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120131, 2456, 205, 5, 35, "Input"],
Cell[120339, 2463, 873, 27, 51, "Output"]
}, Open  ]],
Cell[121227, 2493, 94, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[121346, 2498, 556, 16, 59, "Input"],
Cell[121905, 2516, 911, 28, 51, "Output"],
Cell[122819, 2546, 876, 27, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123732, 2578, 269, 7, 35, "Input"],
Cell[124004, 2587, 2058, 70, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126099, 2662, 136, 2, 35, "Input"],
Cell[126238, 2666, 1204, 31, 277, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127479, 2702, 92, 1, 30, "Input"],
Cell[127574, 2705, 1308, 33, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128919, 2743, 152, 3, 35, "Input"],
Cell[129074, 2748, 1222, 43, 104, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130333, 2796, 115, 2, 30, "Input"],
Cell[130451, 2800, 667, 12, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131155, 2817, 117, 2, 30, "Input"],
Cell[131275, 2821, 111, 1, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131423, 2827, 441, 14, 32, "Input"],
Cell[131867, 2843, 218, 6, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132122, 2854, 1106, 37, 52, "Input"],
Cell[133231, 2893, 46403, 773, 447, 34342, 574, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[179649, 3669, 92, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[179766, 3674, 300, 7, 32, "Input"],
Cell[180069, 3683, 1450, 45, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181556, 3733, 816, 22, 63, "Input"],
Cell[182375, 3757, 2238, 80, 144, "Output"]
}, Open  ]],
Cell[184628, 3840, 91, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[184744, 3845, 570, 18, 42, "Input"],
Cell[185317, 3865, 3299, 114, 177, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188653, 3984, 201, 4, 32, "Input"],
Cell[188857, 3990, 122, 2, 30, "Output"]
}, Open  ]],
Cell[188994, 3995, 160, 4, 32, "Input"],
Cell[189157, 4001, 184, 4, 51, "Input"],
Cell[189344, 4007, 134, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[189503, 4014, 314, 11, 75, "Input"],
Cell[189820, 4027, 278, 10, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190135, 4042, 3008, 74, 73, "Input"],
Cell[193146, 4118, 561, 20, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193744, 4143, 585, 21, 89, "Input"],
Cell[194332, 4166, 170, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194539, 4174, 2546, 59, 46, "Input"],
Cell[197088, 4235, 246, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197371, 4246, 121, 2, 30, "Input"],
Cell[197495, 4250, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197604, 4256, 183, 5, 30, "Input"],
Cell[197790, 4263, 96, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197923, 4269, 119, 2, 30, "Input"],
Cell[198045, 4273, 96, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198178, 4279, 339, 9, 35, "Input"],
Cell[198520, 4290, 630, 20, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199187, 4315, 318, 8, 32, "Input"],
Cell[199508, 4325, 396, 8, 32, "Output"]
}, Open  ]],
Cell[199919, 4336, 91, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[200035, 4341, 659, 20, 63, "Input"],
Cell[200697, 4363, 936, 26, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201670, 4394, 215, 5, 35, "Input"],
Cell[201888, 4401, 88, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202013, 4407, 122, 3, 54, "Input"],
Cell[202138, 4412, 73, 1, 30, "Output"]
}, Open  ]]
}
]
*)

